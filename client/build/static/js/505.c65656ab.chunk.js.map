{"version":3,"file":"static/js/505.c65656ab.chunk.js","mappings":"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","sources":["screens/private/Admin/CreateUpdateFolder.jsx","screens/private/Admin/InsCourseDetails.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  useInsCoursesDeleteMutation,\n  useInsCoursesListQuery,\n  useInsCoursesUpdateMutation,\n} from '../../../redux/services/inccoursesService';\nimport { Button, Container, Form, Modal } from 'react-bootstrap';\n\nfunction CreateUpdateFolder(props) {\n  const [folderName, setFolderName] = useState('');\n  const { data: InsCoursess, isLoading } = useInsCoursesListQuery();\n  const [InsCoursesDelete] = useInsCoursesDeleteMutation();\n  const [InsCoursesUpdate, { isSuccess }] = useInsCoursesUpdateMutation();\n  const data = InsCoursess?.data || [];\n\n  const onSubmit = () => {\n    const data = {\n      ...props.course,\n      coursesHistory: [\n        ...props.course.coursesHistory,\n        {\n          title: folderName,\n          createdAt: new Date().toISOString(),\n          id: Date.now(),\n        },\n      ],\n    };\n    delete data.id;\n    delete data.createdAt;\n    delete data.updatedAt;\n    console.log(data);\n    InsCoursesUpdate({ id: props.course.id, postBody: data });\n  };\n\n  return (\n    <Modal {...props} size=\"sm\" aria-labelledby=\"contained-modal-title-vcenter\" centered show={props.show && !isSuccess}>\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">Create Folder </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form.Group className=\"mb-3 \">\n          <Form.Control type=\"text\" onChange={(e) => setFolderName(e.target.value)} value={folderName} />\n        </Form.Group>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button size=\"sm\" onClick={props.onHide}>\n          Close\n        </Button>\n        <Button size=\"sm\" className=\"mx-2\" onClick={onSubmit}>\n          Submit{' '}\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n\nexport default CreateUpdateFolder;\n","//External lib imports\nimport { useState } from 'react';\nimport { Row, Col, Container, Button, Card, ListGroup, Badge, OverlayTrigger, Tooltip, Spinner } from 'react-bootstrap';\nimport { useTranslation } from 'react-i18next';\nimport { AiOutlineEdit, AiOutlineFolderView } from 'react-icons/ai';\nimport { Link, useParams } from 'react-router-dom';\nimport { BsTrash } from 'react-icons/bs';\n\n//Internal lib imports\nimport Layout from '../../../layout/Layout';\n\nimport Table from '../../../components/Table/Table';\nimport AleartMessage from '../../../helpers/AleartMessage';\nimport DateFormatter from '../../../utils/DateFormatter';\nimport Upload from '../../../components/Upload';\nimport {\n  useInsCoursesDeleteMutation,\n  useInsCoursesHistoryDeleteMutation,\n  useInsCoursesListQuery,\n  useInsCoursesUpdateMutation,\n} from '../../../redux/services/inccoursesService';\nimport CreateUpdateFolder from './CreateUpdateFolder';\n\nconst CourseDetails = () => {\n  const { t } = useTranslation();\n  const { data: InsCoursess, isLoading } = useInsCoursesListQuery();\n  const [insCoursesHistoryDelete] = useInsCoursesHistoryDeleteMutation();\n\n  const data = InsCoursess?.data || [];\n\n  const { id } = useParams();\n  const course = data.find((item) => item.id === id);\n\n  const [modalShow, setModalShow] = useState(false);\n  const [folderCreateUpdateModalShow, setFolderCreateUpdateModalSHow] = useState(false);\n  const [createFlag, setCreateFlag] = useState(true);\n\n  const deleteItem = (hid) => {\n    AleartMessage.DeleteHistory(id, hid, insCoursesHistoryDelete);\n  };\n\n  const columns = [\n    {\n      Header: t('Folder Name'),\n      accessor: (data) => <span className=\"ms-1\"> {data.title}</span>,\n      sort: true,\n    },\n    {\n      Header: t('created at'),\n      accessor: (d) => <span className=\"ms-1\"> {DateFormatter(d.createdAt)}</span>,\n      sort: true,\n    },\n    {\n      Header: t('action'),\n      accessor: (d) => (\n        <div className=\"bodySmall\">\n          <OverlayTrigger\n            placement=\"top\"\n            delay={{ show: 250, hide: 400 }}\n            overlay={<Tooltip id=\"button-tooltip\">{t('view')}</Tooltip>}\n          >\n            <Link to={`/course-folder/${id}/${d.id}`}>\n              <Button variant=\"primary\" style={{ padding: '5px 10px' }} className=\"me-1\">\n                <AiOutlineFolderView />\n              </Button>\n            </Link>\n          </OverlayTrigger>\n          <OverlayTrigger\n            placement=\"top\"\n            delay={{ show: 250, hide: 400 }}\n            overlay={<Tooltip id=\"button-tooltip\">{t('delete')}</Tooltip>}\n          >\n            <Button variant=\"danger\" style={{ padding: '5px 10px' }} onClick={() => deleteItem(d.id)}>\n              <BsTrash />\n            </Button>\n          </OverlayTrigger>\n        </div>\n      ),\n    },\n  ];\n\n  const sizePerPageList = [\n    {\n      text: t('5'),\n      value: 5,\n    },\n    {\n      text: t('10'),\n      value: 10,\n    },\n    {\n      text: t('25'),\n      value: 25,\n    },\n    {\n      text: t('all'),\n      value: data?.length,\n    },\n  ];\n\n  return (\n    <Layout>\n      <Container>\n        <Card>\n          <Card.Body>\n            <Row>\n              <Col className=\"d-flex justify-content-between p-2\" sm={12}>\n                <h5>{t('courses')}</h5>\n                <div>\n                  <Button size=\"sm\" variant=\"primary\" onClick={() => setFolderCreateUpdateModalSHow(true)}>\n                    {t('create Folder')}\n                  </Button>\n                </div>\n              </Col>\n              <Col sm={12}>\n                {isLoading ? (\n                  <Spinner size=\"lg\" variant=\"primary\" />\n                ) : data?.length ? (\n                  <Table\n                    columns={columns}\n                    data={course?.coursesHistory || []}\n                    pageSize={5}\n                    sizePerPageList={sizePerPageList}\n                    isSortable={true}\n                    pagination={true}\n                  />\n                ) : (\n                  t('no data found')\n                )}\n              </Col>\n            </Row>\n\n            <CreateUpdateFolder\n              show={folderCreateUpdateModalShow}\n              onHide={() => setFolderCreateUpdateModalSHow(false)}\n              createFlag\n              course={course}\n            />\n          </Card.Body>\n        </Card>\n      </Container>\n    </Layout>\n  );\n};\n\nexport default CourseDetails;\n"],"names":["props","_useState","useState","_useState2","_slicedToArray","folderName","setFolderName","_useInsCoursesListQue","useInsCoursesListQuery","InsCoursess","data","_useInsCoursesDeleteM","isLoading","useInsCoursesDeleteMutation","_useInsCoursesUpdateM","useInsCoursesUpdateMutation","_useInsCoursesUpdateM2","InsCoursesUpdate","isSuccess","_jsxs","Modal","_objectSpread","size","centered","show","children","_jsx","closeButton","id","Form","className","type","onChange","e","target","value","Button","onClick","onHide","course","coursesHistory","concat","_toConsumableArray","title","createdAt","Date","toISOString","now","updatedAt","console","log","postBody","t","useTranslation","_useInsCoursesHistory","useInsCoursesHistoryDeleteMutation","insCoursesHistoryDelete","useParams","find","item","_useState3","_useState4","folderCreateUpdateModalShow","setFolderCreateUpdateModalSHow","_useState5","_useState6","columns","Header","accessor","sort","d","DateFormatter","OverlayTrigger","placement","delay","hide","overlay","Tooltip","Link","to","variant","style","padding","AiOutlineFolderView","hid","AleartMessage","BsTrash","sizePerPageList","text","length","Layout","Container","Card","Row","Col","sm","Spinner","Table","pageSize","isSortable","pagination","CreateUpdateFolder","createFlag"],"sourceRoot":""}