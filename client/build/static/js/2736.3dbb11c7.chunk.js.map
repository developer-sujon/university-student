{"version":3,"file":"static/js/2736.3dbb11c7.chunk.js","mappings":"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","sources":["redux/services/summerAssessmentService.js","screens/private/Admin/SummerCourses/CreateUpdateSummerAssessment.jsx"],"sourcesContent":["//Internal Lib Import\nimport { apiService } from './baseQuery';\n\nexport const summerAssessmentService = apiService.injectEndpoints({\n  endpoints: (builder) => ({\n    summerAssessmentList: builder.query({\n      query: () => ({\n        url: 'summerAssessment/summerAssessmentList',\n        method: 'GET',\n      }),\n    }),\n    summerAssessmentCreate: builder.mutation({\n      query: (postBody) => ({\n        url: 'summerAssessment/summerAssessmentCreate',\n        method: 'POST',\n        body: postBody,\n      }),\n      async onQueryStarted(_, { dispatch, queryFulfilled }) {\n        try {\n          const { data } = await queryFulfilled;\n          dispatch(\n            apiService.util.updateQueryData('summerAssessmentList', undefined, (draft) => {\n              draft.data.push(data.data);\n            })\n          );\n          //dispatch(dashboardService.endpoints.dashboardSummary.initiate());\n        } catch {}\n      },\n    }),\n    summerAssessmentApply: builder.mutation({\n      query: ({ id, enrolls }) => ({\n        url: `summerAssessment/summerAssessmentApply/${id}`,\n        method: 'PATCH',\n        body: {\n          enrolls: enrolls,\n        },\n      }),\n      async onQueryStarted({ id, enrolls }, { dispatch, queryFulfilled }) {\n        try {\n          const { data } = await queryFulfilled;\n\n          if (data) {\n            window.location.reload();\n          }\n        } catch {}\n      },\n    }),\n\n    summerAssessmentUpdate: builder.mutation({\n      query: ({ id, postBody }) => ({\n        url: `summerAssessment/summerAssessmentUpdate/${id}`,\n        method: 'PATCH',\n        body: postBody,\n      }),\n\n      async onQueryStarted({ id, postBody }, { dispatch, queryFulfilled }) {\n        try {\n          const { data } = await queryFulfilled;\n\n          dispatch(\n            apiService.util.updateQueryData('summerAssessmentList', undefined, (draft) => {\n              const findIndex = draft.data.findIndex((role) => role.id === id);\n              draft.data[findIndex].name = data?.data.name;\n            })\n          );\n          //dispatch(dashboardService.endpoints.dashboardSummary.initiate());\n        } catch {\n          //patchsummerAssessment.undo();\n        }\n      },\n    }),\n    summerAssessmentDelete: builder.mutation({\n      query: (id) => ({\n        url: `summerAssessment/summerAssessmentDelete/${id}`,\n        method: 'DELETE',\n      }),\n\n      async onQueryStarted(id, { dispatch, queryFulfilled }) {\n        const patchsummerAssessment = dispatch(\n          apiService.util.updateQueryData('summerAssessmentList', undefined, (draft) => {\n            draft.data = draft.data.filter((role) => role.id !== id);\n          })\n        );\n\n        try {\n          await queryFulfilled;\n        } catch {\n          patchsummerAssessment.undo();\n        }\n      },\n    }),\n  }),\n});\n\nexport const {\n  useSummerAssessmentCreateMutation,\n  useSummerAssessmentApplyMutation,\n  useSummerAssessmentListQuery,\n  useSummerAssessmentUpdateMutation,\n  useSummerAssessmentDeleteMutation,\n} = summerAssessmentService;\n","//External lib imports\nimport { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Row, Col, Container, Button, Card, Form, Spinner } from 'react-bootstrap';\nimport { useTranslation } from 'react-i18next';\nimport { useForm, Controller } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\n\n//Internal lib imports\nimport Layout from '../../../../layout/Layout';\nimport {\n  useSummerAssessmentCreateMutation,\n  useSummerAssessmentListQuery,\n  useSummerAssessmentUpdateMutation,\n} from '../../../../redux/services/summerAssessmentService';\n\nconst CreateUpdateSummerAssessment = () => {\n  let [objectID, SetObjectID] = useState(null);\n  const [details, setDetails] = useState({\n    name: '',\n  });\n\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const { data: allSummerAssessment } = useSummerAssessmentListQuery();\n  const [SummerAssessmentCreate, { isLoading: createLoading, isSuccess: createSuccess }] =\n    useSummerAssessmentCreateMutation();\n  const [SummerAssessmentUpdate, { isLoading: updateLoading, isSuccess: updateSuccess }] =\n    useSummerAssessmentUpdateMutation();\n\n  useEffect(() => {\n    let params = new URLSearchParams(window.location.search);\n    let id = params.get('id');\n    if (id !== null) {\n      SetObjectID(id);\n    }\n\n    if (objectID && allSummerAssessment) {\n      setDetails(allSummerAssessment?.data?.find((item) => item.id === objectID));\n    }\n  }, [objectID, allSummerAssessment]);\n\n  const {\n    control,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm({\n    mode: 'onChange',\n    defaultValues: details,\n    resolver: yupResolver(\n      yup.object({\n        name: yup.string().required(t('courses name is required')),\n      })\n    ),\n  });\n\n  useEffect(() => {\n    if (details) {\n      reset(details);\n    }\n  }, [details]);\n\n  /*\n   * form handle submit\n   */\n  const submitForm = ({ name }) => {\n    const postBody = {\n      name,\n    };\n    if (!objectID) {\n      SummerAssessmentCreate(postBody);\n    } else {\n      SummerAssessmentUpdate({ id: objectID, postBody });\n    }\n  };\n\n  useEffect(() => {\n    if (createSuccess || updateSuccess) {\n      navigate('/summer-assessment');\n    }\n  }, [createSuccess, updateSuccess]);\n\n  return (\n    <Layout>\n      <Container>\n        <Card>\n          <Card.Body>\n            <Row>\n              <h5>{t(`${objectID ? 'update summer assessment' : 'save summer assessment'}`)}</h5>\n              <hr className=\"bg-light\" />\n              <Col>\n                <Form onSubmit={handleSubmit(submitForm)} onReset={reset}>\n                  <Row class>\n                    <Col sm={4}>\n                      <Form.Group className=\"mb-3\" controlId=\"name\">\n                        <Form.Label>{t('name')}</Form.Label>\n                        <Controller\n                          control={control}\n                          name=\"name\"\n                          render={({ field: { onChange, onBlur, value, ref } }) => (\n                            <Form.Control\n                              onChange={onChange}\n                              defaultValue={value}\n                              ref={ref}\n                              isInvalid={errors.name}\n                              placeholder={t('name of the summer assessment')}\n                              type=\"text\"\n                              size=\"sm\"\n                            />\n                          )}\n                        />\n                        {errors.name && <Form.Text className=\"text-danger\">{errors.name.message}</Form.Text>}\n                      </Form.Group>\n                    </Col>\n                  </Row>\n\n                  <Row>\n                    <Col sm={4}>\n                      <Button size=\"sm\" className=\"mt-2\" type=\"submit\">\n                        {createLoading || updateLoading ? <Spinner size=\"sm\" color=\"light\" /> : t('save change')}\n                      </Button>\n                    </Col>\n                  </Row>\n                </Form>\n              </Col>\n            </Row>\n          </Card.Body>\n        </Card>\n      </Container>\n    </Layout>\n  );\n};\n\nexport default CreateUpdateSummerAssessment;\n"],"names":["summerAssessmentService","apiService","endpoints","builder","summerAssessmentList","query","url","method","summerAssessmentCreate","mutation","postBody","body","onQueryStarted","_","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","dispatch","queryFulfilled","_yield$queryFulfilled","data","wrap","_context","prev","next","sent","undefined","draft","push","t0","stop","summerAssessmentApply","_ref2","id","enrolls","concat","_ref3","_ref4","_callee2","_yield$queryFulfilled2","_context2","window","location","reload","summerAssessmentUpdate","_ref5","_ref6","_ref7","_callee3","_yield$queryFulfilled3","_context3","findIndex","role","name","summerAssessmentDelete","_ref8","_callee4","patchsummerAssessment","_context4","filter","undo","useSummerAssessmentCreateMutation","useSummerAssessmentApplyMutation","useSummerAssessmentListQuery","useSummerAssessmentUpdateMutation","useSummerAssessmentDeleteMutation","_useState","useState","_useState2","_slicedToArray","objectID","SetObjectID","_useState3","_useState4","details","setDetails","t","useTranslation","navigate","useNavigate","allSummerAssessment","_useSummerAssessmentC","_useSummerAssessmentC2","SummerAssessmentCreate","_useSummerAssessmentC3","createLoading","isLoading","createSuccess","isSuccess","_useSummerAssessmentU","_useSummerAssessmentU2","SummerAssessmentUpdate","_useSummerAssessmentU3","updateLoading","updateSuccess","useEffect","_allSummerAssessment$","URLSearchParams","search","get","find","item","_useForm","useForm","mode","defaultValues","resolver","yupResolver","yup","required","control","handleSubmit","reset","errors","formState","_jsx","Layout","children","Container","Card","_jsxs","Row","className","Col","Form","onSubmit","onReset","class","sm","controlId","Controller","render","_ref2$field","field","onChange","value","onBlur","ref","defaultValue","isInvalid","placeholder","type","size","message","Button","Spinner","color"],"sourceRoot":""}