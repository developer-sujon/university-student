{"version":3,"file":"static/js/4291.fd3e7cb4.chunk.js","mappings":"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","sources":["redux/services/othersService.js","screens/private/Others/CreateUpdateOthers.jsx"],"sourcesContent":["//Internal Lib Import\nimport { apiService } from './baseQuery';\n\nexport const othersService = apiService.injectEndpoints({\n  endpoints: (builder) => ({\n    othersList: builder.query({\n      query: () => ({\n        url: 'others/othersList',\n        method: 'GET',\n      }),\n    }),\n    othersCreate: builder.mutation({\n      query: (postBody) => ({\n        url: 'others/othersCreate',\n        method: 'POST',\n        body: postBody,\n      }),\n      async onQueryStarted(_, { dispatch, queryFulfilled }) {\n        try {\n          const { data } = await queryFulfilled;\n          dispatch(\n            apiService.util.updateQueryData('othersList', undefined, (draft) => {\n              draft.data.push(data.data);\n            })\n          );\n          //dispatch(dashboardService.endpoints.dashboardSummary.initiate());\n        } catch {}\n      },\n    }),\n\n    othersUpdate: builder.mutation({\n      query: ({ id, postBody }) => ({\n        url: `others/othersUpdate/${id}`,\n        method: 'PATCH',\n        body: postBody,\n      }),\n\n      async onQueryStarted({ id, postBody }, { dispatch, queryFulfilled }) {\n        try {\n          const { data } = await queryFulfilled;\n\n          dispatch(\n            apiService.util.updateQueryData('othersList', undefined, (draft) => {\n              const findIndex = draft.data.findIndex((role) => role.id === id);\n              draft.data[findIndex].description = data?.data?.description;\n              draft.data[findIndex].status = data?.data?.status;\n              draft.data[findIndex].subject = data?.data?.subject;\n              draft.data[findIndex].studentID = data?.data?.studentID;\n            })\n          );\n          //dispatch(dashboardService.endpoints.dashboardSummary.initiate());\n        } catch {\n          // patchothers.undo();\n        }\n      },\n    }),\n    othersDelete: builder.mutation({\n      query: (id) => ({\n        url: `others/othersDelete/${id}`,\n        method: 'DELETE',\n      }),\n\n      async onQueryStarted(id, { dispatch, queryFulfilled }) {\n        const patchothers = dispatch(\n          apiService.util.updateQueryData('othersList', undefined, (draft) => {\n            draft.data = draft.data.filter((role) => role.id !== id);\n          })\n        );\n\n        try {\n          await queryFulfilled;\n        } catch {\n          patchothers.undo();\n        }\n      },\n    }),\n  }),\n});\n\nexport const { useOthersCreateMutation, useOthersListQuery, useOthersUpdateMutation, useOthersDeleteMutation } =\n  othersService;\n","//External lib imports\nimport { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Row, Col, Container, Button, Card, Form, Spinner } from 'react-bootstrap';\nimport { useTranslation } from 'react-i18next';\nimport { useForm, Controller } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\n\n//Internal lib imports\nimport Layout from '../../../layout/Layout';\nimport { useOthersCreateMutation, useOthersListQuery, useOthersUpdateMutation } from '../../../redux/services/othersService';\n\nconst CreateUpdateOthers = () => {\n  let [objectID, SetObjectID] = useState(null);\n  const [details, setDetails] = useState({\n    subject: '',\n    description: '',\n  });\n\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const { data: allOthers } = useOthersListQuery();\n  const [OthersCreate, { isLoading: createLoading, isSuccess: createSuccess }] = useOthersCreateMutation();\n  const [OthersUpdate, { isLoading: updateLoading, isSuccess: updateSuccess }] = useOthersUpdateMutation();\n\n  useEffect(() => {\n    let params = new URLSearchParams(window.location.search);\n    let id = params.get('id');\n    if (id !== null) {\n      SetObjectID(id);\n    }\n\n    if (objectID && allOthers) {\n      setDetails(allOthers?.data?.find((item) => item.id === objectID));\n    }\n  }, [objectID, allOthers]);\n\n  const {\n    control,\n    handleSubmit,\n    reset,\n    watch,\n    setValue,\n    formState: { errors },\n  } = useForm({\n    mode: 'onChange',\n    defaultValues: details,\n    resolver: yupResolver(\n      yup.object({\n        subject: yup.string().required(t('subject is required')),\n        description: yup.string().required(t('description is required')),\n      })\n    ),\n  });\n\n  useEffect(() => {\n    if (details) {\n      reset(details);\n    }\n  }, [details]);\n\n  /*\n   * form handle submit\n   */\n  const submitForm = ({ subject, description }) => {\n    const postBody = {\n      subject,\n      description,\n    };\n    if (!objectID) {\n      OthersCreate(postBody);\n    } else {\n      OthersUpdate({ id: objectID, postBody });\n    }\n  };\n\n  useEffect(() => {\n    if (createSuccess || updateSuccess) {\n      navigate('/others');\n    }\n  }, [createSuccess, updateSuccess]);\n\n  return (\n    <Layout>\n      <Container>\n        <Card>\n          <Card.Body>\n            <Row>\n              <h5>{t(`${objectID ? 'update others' : 'save others'}`)}</h5>\n              <hr className=\"bg-light\" />\n              <Col>\n                <Form onSubmit={handleSubmit(submitForm)} onReset={reset}>\n                  <Row class>\n                    <Col sm={12}>\n                      <Form.Group className=\"mb-3\" controlId=\"subject\">\n                        <Form.Label>{t('subject')}</Form.Label>\n                        <Controller\n                          control={control}\n                          name=\"subject\"\n                          render={({ field: { onChange, onBlur, value, ref } }) => (\n                            <Form.Control\n                              onChange={onChange}\n                              defaultValue={value}\n                              ref={ref}\n                              isInvalid={errors.subject}\n                              placeholder={t('subject of the others')}\n                              type=\"text\"\n                              size=\"sm\"\n                            />\n                          )}\n                        />\n                        {errors.subject && <Form.Text className=\"text-danger\">{errors.subject.message}</Form.Text>}\n                      </Form.Group>\n                    </Col>\n                    <Col sm={12}>\n                      <Form.Group className=\"mb-3\" controlId=\"description\">\n                        <Form.Label>{t('description')}</Form.Label>\n                        <Controller\n                          control={control}\n                          name=\"description\"\n                          render={({ field: { onChange, onBlur, value, ref } }) => (\n                            <Form.Control\n                              onChange={onChange}\n                              defaultValue={value}\n                              ref={ref}\n                              isInvalid={errors.description}\n                              placeholder={t('description of the others')}\n                              type=\"text\"\n                              size=\"sm\"\n                              as={'textarea'}\n                            />\n                          )}\n                        />\n                        {errors.description && <Form.Text className=\"text-danger\">{errors.description.message}</Form.Text>}\n                      </Form.Group>\n                    </Col>\n                  </Row>\n\n                  <Row>\n                    <Col sm={4}>\n                      <Button size=\"sm\" className=\"mt-2\" type=\"submit\">\n                        {createLoading || updateLoading ? <Spinner size=\"sm\" color=\"light\" /> : t('save change')}\n                      </Button>\n                    </Col>\n                  </Row>\n                </Form>\n              </Col>\n            </Row>\n          </Card.Body>\n        </Card>\n      </Container>\n    </Layout>\n  );\n};\n\nexport default CreateUpdateOthers;\n"],"names":["othersService","apiService","endpoints","builder","othersList","query","url","method","othersCreate","mutation","postBody","body","onQueryStarted","_","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","dispatch","queryFulfilled","_yield$queryFulfilled","data","wrap","_context","prev","next","sent","undefined","draft","push","t0","stop","othersUpdate","_ref2","id","concat","_ref3","_ref4","_callee2","_yield$queryFulfilled2","_context2","_data$data","_data$data2","_data$data3","_data$data4","findIndex","role","description","status","subject","studentID","othersDelete","_ref5","_callee3","patchothers","_context3","filter","undo","useOthersCreateMutation","useOthersListQuery","useOthersUpdateMutation","useOthersDeleteMutation","_useState","useState","_useState2","_slicedToArray","objectID","SetObjectID","_useState3","_useState4","details","setDetails","t","useTranslation","navigate","useNavigate","allOthers","_useOthersCreateMutat","_useOthersCreateMutat2","OthersCreate","_useOthersCreateMutat3","createLoading","isLoading","createSuccess","isSuccess","_useOthersUpdateMutat","_useOthersUpdateMutat2","OthersUpdate","_useOthersUpdateMutat3","updateLoading","updateSuccess","useEffect","_allOthers$data","URLSearchParams","window","location","search","get","find","item","_useForm","useForm","mode","defaultValues","resolver","yupResolver","yup","required","control","handleSubmit","reset","errors","watch","setValue","formState","_jsx","Layout","children","Container","Card","_jsxs","Row","className","Col","Form","onSubmit","onReset","class","sm","controlId","Controller","name","render","_ref2$field","field","onChange","value","onBlur","ref","defaultValue","isInvalid","placeholder","type","size","message","_ref3$field","as","Button","Spinner","color"],"sourceRoot":""}