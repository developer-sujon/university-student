{"version":3,"file":"static/js/8039.c730d3c5.chunk.js","mappings":"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","sources":["screens/private/Admin/SummerCourses/SummerAssessment.jsx"],"sourcesContent":["//External lib imports\nimport { useState } from 'react';\nimport { Row, Col, Container, Button, Card, ListGroup, Badge, OverlayTrigger, Tooltip, Spinner } from 'react-bootstrap';\nimport { useTranslation } from 'react-i18next';\nimport { AiOutlineEdit, AiOutlineFolderView } from 'react-icons/ai';\nimport { Link } from 'react-router-dom';\nimport { BsTrash } from 'react-icons/bs';\nimport { GrStatusGood } from 'react-icons/gr';\n\n//Internal lib imports\nimport Layout from '../../../../layout/Layout';\nimport {\n  useSummerAssessmentDeleteMutation,\n  useSummerAssessmentListQuery,\n  useSummerAssessmentUpdateMutation,\n} from '../../../../redux/services/summerAssessmentService';\nimport Table from '../../../../components/Table/Table';\nimport AleartMessage from '../../../../helpers/AleartMessage';\nimport { useProfileDetailsQuery } from '../../../../redux/services/profileService';\nimport SubjectRepetitionDetailsModal from './SummerAssessmentDetailsModal';\nimport exportDataJson from '../../../../utils/exportDataJson';\n\nconst SummerAssessment = () => {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  const [singleSummerAssessment, setSingleSummerAssessment] = useState({});\n  const { data: profileDetails } = useProfileDetailsQuery();\n  const [SummerAssessmentUpdate] = useSummerAssessmentUpdateMutation();\n\n  const { t } = useTranslation();\n  const { data: SummerAssessments, isLoading } = useSummerAssessmentListQuery();\n  const [SummerAssessmentDelete] = useSummerAssessmentDeleteMutation();\n  const data = SummerAssessments?.data || [];\n\n  const deleteItem = (id) => {\n    AleartMessage.Delete(id, SummerAssessmentDelete);\n  };\n\n  const updateStatus = (data) => {\n    const { id, createdAt, updatedAt, studentID, ...others } = data;\n    AleartMessage.StatusUpdate(id, others, SummerAssessmentUpdate);\n  };\n\n  const handleQuickView = (d) => {\n    setSingleSummerAssessment(d);\n    handleShow();\n  };\n\n  const columns = [\n    {\n      Header: '#',\n      accessor: (_, index) => index + 1,\n      sort: true,\n    },\n    {\n      Header: t('courses'),\n      accessor: (d) => <span className=\"ms-1\"> {d.name}</span>,\n      sort: true,\n    },\n    {\n      Header: t('no of request'),\n      accessor: (d) => <span className=\"ms-1\"> {d?.enrolls?.length}</span>,\n      sort: true,\n    },\n    {\n      Header: t('action'),\n      accessor: (d) => (\n        <div className=\"bodySmall\">\n          <OverlayTrigger\n            placement=\"top\"\n            delay={{ show: 250, hide: 400 }}\n            overlay={<Tooltip id=\"button-tooltip\">{t('report')}</Tooltip>}\n          >\n            <Link to={`/summer-assessment-report?id=${d?.id}`}>\n              <Button variant=\"primary\" style={{ padding: '5px 10px' }} className=\"me-1\">\n                <AiOutlineFolderView />\n              </Button>\n            </Link>\n          </OverlayTrigger>\n          <OverlayTrigger\n            placement=\"top\"\n            delay={{ show: 250, hide: 400 }}\n            overlay={<Tooltip id=\"button-tooltip\">{t('edit')}</Tooltip>}\n          >\n            <Link to={`/summer-assessment-create-update?id=${d?.id}`}>\n              <Button variant=\"primary\" style={{ padding: '5px 10px' }} className=\"me-1\">\n                <AiOutlineEdit />\n              </Button>\n            </Link>\n          </OverlayTrigger>\n          <OverlayTrigger\n            placement=\"top\"\n            delay={{ show: 250, hide: 400 }}\n            overlay={<Tooltip id=\"button-tooltip\">{t('delete')}</Tooltip>}\n          >\n            <Button variant=\"danger\" style={{ padding: '5px 10px' }} onClick={() => deleteItem(d.id)}>\n              <BsTrash />\n            </Button>\n          </OverlayTrigger>\n        </div>\n      ),\n    },\n  ];\n\n  const sizePerPageList = [\n    {\n      text: t('5'),\n      value: 5,\n    },\n    {\n      text: t('10'),\n      value: 10,\n    },\n    {\n      text: t('25'),\n      value: 25,\n    },\n    {\n      text: t('all'),\n      value: data?.length,\n    },\n  ];\n\n  return (\n    <Layout>\n      <Container>\n        <Card>\n          <Card.Body>\n            <Row>\n              <Col className=\"d-flex justify-content-between p-2\" sm={12}>\n                <h5>{t('summer assessment')}</h5>\n\n                <div>\n                  <Link to={'/summer-assessment-create-update'}>\n                    <Button size=\"sm\" variant=\"primary\">\n                      {t('create summer assessment')}\n                    </Button>\n                  </Link>\n                  <Button\n                    className=\"mx-2\"\n                    size=\"sm\"\n                    variant=\"primary\"\n                    onClick={() => exportDataJson(data, 'summer-assessment-report', 'xls')}\n                  >\n                    {t('download report')}\n                  </Button>\n                </div>\n              </Col>\n              <Col sm={12}>\n                {isLoading ? (\n                  <Spinner size=\"lg\" variant=\"primary\" />\n                ) : data?.length ? (\n                  <Table\n                    columns={columns}\n                    data={data}\n                    pageSize={5}\n                    sizePerPageList={sizePerPageList}\n                    isSortable={true}\n                    pagination={true}\n                  />\n                ) : (\n                  t('no data found')\n                )}\n              </Col>\n            </Row>\n          </Card.Body>\n        </Card>\n      </Container>\n      <SubjectRepetitionDetailsModal singleSummerAssessment={singleSummerAssessment} show={show} handleClose={handleClose} />\n    </Layout>\n  );\n};\n\nexport default SummerAssessment;\n"],"names":["_useState","useState","_useState2","_slicedToArray","show","setShow","_useState3","_useState4","singleSummerAssessment","_useSummerAssessmentU","useProfileDetailsQuery","data","useSummerAssessmentUpdateMutation","t","useTranslation","_useSummerAssessmentL","useSummerAssessmentListQuery","SummerAssessments","isLoading","_useSummerAssessmentD","useSummerAssessmentDeleteMutation","SummerAssessmentDelete","columns","Header","accessor","_","index","sort","d","_jsxs","className","children","name","_d$enrolls","enrolls","length","_jsx","OverlayTrigger","placement","delay","hide","overlay","Tooltip","id","Link","to","concat","Button","variant","style","padding","AiOutlineFolderView","AiOutlineEdit","onClick","AleartMessage","BsTrash","sizePerPageList","text","value","Layout","Container","Card","Row","Col","sm","size","exportDataJson","Spinner","Table","pageSize","isSortable","pagination","SubjectRepetitionDetailsModal","handleClose"],"sourceRoot":""}